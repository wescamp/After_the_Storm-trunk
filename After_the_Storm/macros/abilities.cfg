#textdomain wesnoth-After_the_Storm

# wmlindent: start ignoring

# all forest terrains (tree, mushroom) and farmland
#define VEGETATED_TERRAINS
*^F*, *^Uf, *^Ufi, *^Gvs #enddef

#define NOTES
    _ "

Notes: "#enddef

# As its used by some abilities' descriptions in this file, we cannot move this macro to
# special-notes.cfg without running the risk of getting a blank string by the preprocessor.
#define SPECIAL_NOTES_VEGETATED_TERRAINS
    _ " Vegetated terrains are forest, great tree, farmland and mushroom grove hexes."#enddef

#define __ABILITY_TSTRING_SYLVAN_SPARK_NAME
    _ "sylvan spark"
#enddef
#define __ABILITY_TSTRING_SYLVAN_SPARK_DESC
    _ "Sylvan Spark:
While in vegetated terrains, the unit will heal itself 5 hp per turn. If it is poisoned, it will remove the poison instead of healing."+{NOTES}+{SPECIAL_NOTES_VEGETATED_TERRAINS}
#enddef

# wmlindent: stop ignoring

# Fake ability, actually handled by scenario-specific events to avoid cheating, etc.
#define ABILITY_GLAMOUR
    [dummy]
        id=glamour
        name= _ "glamour"
        description= _ "Glamour:
All faeries can cast illusions on their enemies (or victims) that can be used to cloak themselves. However, it is not properly suited for combat, as it puts the faerie in a weak state and exposes her to physical attack.

A faerie may use the enhanced spell of glamour to transform herself completely into other creature that she knows and has learned about its anatomy and behavior. The unit that casts the spell during a turn, will not be able to morph back into its original form or another target until the next turn at the begin of which the unit has been resting (that is, did not move or attack during the previous turn). The movement points are set to half the amount left before casting the spell always. The original unit's traits and abilities are kept only when applicable. AMLAs (After-Maximum-Level-Advancements) are always discarded until the units morphs back into its original form.

The metamorphed faerie's maximum health may differ from her normal amoumt, depending on the target creature kind. This also applies when morphing back into her original form.

The experience points gained in the original form or a metamorphic form are not related, and the later are always discarded, unlike the original experience amount, which is stored between changes of state."
    [/dummy]
#enddef

#define ABILITY_SYLVAN_ESSENCE
    [heals]
        value=8
        id=sylvan_essence_healing_and_curing
        name= _ "sylvan essence"
        description= _ "Sylvan Essence:
This unit can heal and cure friendly units on adjacent hexes every turn, to a base maximum of 8 HP. In vegetated terrains, it will conceal itself from its enemies. It can also regenerate (but not unpoison) 3 HP per-turn, but only on vegetated terrains."+{NOTES}+{SPECIAL_NOTES_VEGETATED_TERRAINS}
        affect_allies=yes
        affect_self=no
        poison=cured
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
        [/affect_adjacent]
    [/heals]
    [hides]
        id=sylvan_essence_conceal
        affect_self=yes
        [filter_self]
            [filter_location]
                terrain={VEGETATED_TERRAINS}
            [/filter_location]
        [/filter_self]
    [/hides]
    [regenerate]
        value=3
        id=sylvan_essence_selfheal
        affect_self=yes
        [filter_self]
            [filter_location]
                terrain={VEGETATED_TERRAINS}
            [/filter_location]
        [/filter_self]
    [/regenerate]
#enddef

#define ABILITY_OBSCURE
    # Canned definition of the Obscures ability to be included in an
    # [abilities] clause.
    [illuminates]
        id=obscure
        value=-25
        max_value=-25
        cumulative=no
        name= _ "obscures"
        description= _ "Obscures:
This unit darkens the surrounding area, making chaotic units fight better, and lawful units fight worse.

Any units adjacent to this unit will fight as if it were dusk when it is day, and as if it were night when it is dusk."
        affect_self=yes
    [/illuminates]
#enddef

#define ABILITY_SYLVAN_SPARK
    [regenerate]
        value=5
        id=sylvan_spark
        name={__ABILITY_TSTRING_SYLVAN_SPARK_NAME}
        description={__ABILITY_TSTRING_SYLVAN_SPARK_DESC}
        name_inactive={__ABILITY_TSTRING_SYLVAN_SPARK_NAME}
        description_inactive={__ABILITY_TSTRING_SYLVAN_SPARK_DESC}
        affect_self=yes
        [filter_self]
            [filter_location]
                terrain={VEGETATED_TERRAINS}
            [/filter_location]
        [/filter_self]
        poison=cured
    [/regenerate]
#enddef
