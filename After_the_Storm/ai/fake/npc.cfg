#textdomain wesnoth-After_the_Storm

# wmlindent: start ignoring
#define NPC_BIRD_UNIT_TYPES
Crow,Falcon,Shaxthal Razorbird,Shaxthal Thunderbird,Shaxthal Wyrm#enddef
# wmlindent: stop ignoring

#define IS_NPC
    {IDLE_AI_ALGORITHM}
#enddef

#define IS_HOSTILE_NPC
    [ai]
        aggression=1.0
        leader_value=0
        village_value=0
        protect_leader=0
        grouping=no
        caution=0.0
        simple_targetting=yes
    [/ai]
#enddef

#define NPC_SIDE SIDE
    [side]
        colour={COLOR_PINK}
        gold=0
        income=-2
        recruit=
        side={SIDE}
        controller=ai
        {IS_NPC}
        no_leader=yes
        team_name=npc_team
    [/side]
#enddef

#define NPC_HOSTILE_SIDE SIDE
    [side]
        side={SIDE}
        controller=ai
        [ai]
            #makes them focus on the player
            [target]
                side=1
                value=5
            [/target]
            aggression=1.0
            leader_value=0
            village_value=0
            protect_leader=0
            grouping=no
            caution=0.1
            simple_targetting=yes
        [/ai]
        no_leader=yes
        team_name=npc_team
    [/side]
#enddef

#define NPC TYPE X Y SIDE
    {RANDOM "n,s,ne,nw,se,sw"}
    [unit]
        generate_name=no
        type={TYPE}
        x,y={X},{Y}
        side={SIDE}
        ai_special=guardian
        facing=$random
        random_traits=yes
        random_gender=yes
    [/unit]
    {CLEAR_VARIABLE random}
#enddef

#define NPC_BIRD_BEHAVIOR SIDE LEFT RIGHT TOP BOTTOM
    [event]
        name=turn refresh
        first_time_only=no
        [if]
            {VARIABLE_NUM_EQUALS side_number {SIDE} }
            [then]
                [store_unit]
                    [filter]
                        type={NPC_BIRD_UNIT_TYPES}
                        side={SIDE}
                    [/filter]
                    variable=NPC_birds
                    kill=no
                [/store_unit]
                # Sanity checks go first; make sure that in the real bird movement [if] block we are not
                # going to place an unit out of the parameter-defined boundaries!
                # This reminds me how nice it would be to have:
                #
                # [set_variable]
                #   name=foo_bar
                #   map_boundaries=all
                # [/set_variable]
                # or
                # [set_variable]
                #   name=foo_bar.x
                #   map_boundaries=x
                # [/set_variable]
                {IFTU_DEBUG_WARN "<NPC> found $NPC_birds.length birds for sanity checking"}
                {FOREACH NPC_birds i}
                    [if]
                        {VARIABLE_NUM_GREATER_OR_EQUAL_THAN NPC_birds[$i].x {RIGHT} }
                        {OR {VARIABLE_NUM_LESS_OR_EQUAL_THAN NPC_birds[$i].x {LEFT} } }
                        {OR {VARIABLE_NUM_LESS_OR_EQUAL_THAN NPC_birds[$i].y {TOP} } }
                        {OR {VARIABLE_NUM_GREATER_OR_EQUAL_THAN NPC_birds[$i].y {BOTTOM} } }
                        [then]
                            {IFTU_DEBUG_ERR "<NPC> killing $NPC_birds[$i].id| (side $NPC_birds[$i].side|) to prevent invalid unit positioning"}
                            [kill]
                                id=$NPC_birds[$i].id
                                side=$NPC_birds[$i].side
                                fire_event=yes
                                animate=no
                            [/kill]
                        [/then]
                    [/if]
                {NEXT i}
                # Refresh list of NPC birds with the above changes
                {CLEAR_VARIABLE NPC_birds}
                [store_unit]
                    [filter]
                        type={NPC_BIRD_UNIT_TYPES}
                        side={SIDE}
                    [/filter]
                    variable=NPC_birds
                    kill=no
                [/store_unit]

                {IFTU_DEBUG_WARN "<NPC> found $NPC_birds.length birds for artificial AI behavior process"}

                {FOREACH NPC_birds i}
                    {IFTU_DEBUG_WARN "<NPC> entering fake AI procedure: $NPC_birds[$i].id (side $NPC_birds[$i].side|)"}
                    [if]
                        {VARIABLE_NUM_GREATER_THAN NPC_birds[$i].moves 0}
                        [then]
                            {RANDOM "n,s,ne,nw,se,sw"}
                            {IFTU_DEBUG_WARN "<NPC> RNG threw movement direction '$random|'"}
                            {VARIABLE j 0}
                            {VARIABLE_F j_bound "$NPC_birds[$i].moves"}
                            {IFTU_DEBUG_WARN "<NPC> bird movement limited to $j_bound hexes"}
                            {VARIABLE_F NPC_temp_movepath_x "$NPC_birds[$i].x"}
                            {VARIABLE_F NPC_temp_movepath_y "$NPC_birds[$i].y"}
                            {IFTU_DEBUG_WARN "<NPC> entering movement loop"}
                            [while]
                                {VARIABLE_NUM_LESS_THAN j $j_bound}
                                [have_unit]
                                    id=$NPC_birds[$i].id
                                    side=$NPC_birds[$i].side
                                [/have_unit]
                                [do]
                                    {IFTU_DEBUG_WARN "<NPC> step $j of $j_bound|..."}
                                    # Get an adjacent location in that random direction
                                    [store_locations]
                                        [filter_adjacent_location]
                                            adjacent=-$random
                                            x=$NPC_birds[$i].x
                                            y=$NPC_birds[$i].y
                                        [/filter_adjacent_location]
                                        variable=temp_NPC_target
                                    [/store_locations]
                                    {IFTU_DEBUG_WARN "<NPC> adjacent hex at $random from ($NPC_birds[$i].x|,$NPC_birds[$i].y|): ($temp_NPC_target.x|,$temp_NPC_target.y|)"}
                                    # OK, got it. Prepare for next recursion cycle and extend the MUF path string
                                    # Extra code ensuring that the variables are copied, formatted and set in the correct order
                                    {VARIABLE_F temp_swap_var "$NPC_temp_movepath_x|,$temp_NPC_target.x|"}
                                    {VARIABLE_F NPC_temp_movepath_x "$temp_swap_var"}
                                    {VARIABLE_F temp_swap_var "$NPC_temp_movepath_y|,$temp_NPC_target.y|"}
                                    {VARIABLE_F NPC_temp_movepath_y "$temp_swap_var"}
                                    {VARIABLE NPC_birds[$i].x $temp_NPC_target.x}
                                    {VARIABLE NPC_birds[$i].y $temp_NPC_target.y}

                                    {CLEAR_VARIABLE temp_swap_var}
                                    {CLEAR_VARIABLE temp_NPC_target}

                                    {VARIABLE_DECREMENT NPC_birds[$i].moves}
                                    {VARIABLE_INCREMENT j}
                                [/do]
                            [/while]
                            {IFTU_DEBUG_WARN "<NPC> passed movement loop"}
                            {CLEAR_VARIABLE j}
                            {CLEAR_VARIABLE j_bound}
                            # Now move the bird
                            [kill]
                                id=$NPC_birds[$i].id
                                side=$NPC_birds[$i].side
                            [/kill]
                            [move_unit_fake]
                                gender=$NPC_birds[$i].gender
                                variation=$NPC_birds[$i].variation
                                type=$NPC_birds[$i].type
                                side=$NPC_birds[$i].side
                                x=$NPC_temp_movepath_x
                                y=$NPC_temp_movepath_y
                            [/move_unit_fake]
                            {IFTU_DEBUG_WARN "<NPC> set facing for bird $NPC_birds[$i].id to $random"}
                            {VARIABLE NPC_birds[$i].facing $random}
                            [unstore_unit]
                                # In case the coordinates were screwed up in the process by a design flaw in this code,
                                # make sure we don't kill any existing units by unstoring in an used hex
                                find_vacant=yes
                                variable=NPC_birds[$i]
                            [/unstore_unit]
                            [redraw]
                            [/redraw]
                            {CLEAR_VARIABLE NPC_temp_movepath_x}
                            {CLEAR_VARIABLE NPC_temp_movepath_y}
                        [/then]
                    [/if]
                    {IFTU_DEBUG_WARN "<NPC> exiting fake AI procedure: $NPC_birds[$i].id (side $NPC_birds[$i].side|)"}
                {NEXT i}
                {CLEAR_VARIABLE NPC_birds}
            [/then]
        [/if]
    [/event]
#enddef
